<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.ytu.store.mapper.UserMapper">

    <resultMap id="UserEntityMap" type="com.ytu.store.entity.User">
        <id column="uid" property="uid"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="gender" property="gender" />
        <result column="phone" property="phone" />
        <result column="email" property="email" />
        <result column="code" property="code" />
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

    <!-- 插入用户数据 -->
    <!-- Integer save(User user) -->
    <insert id="save" useGeneratedKeys="true" keyProperty="uid">
			INSERT INTO user (
				username, password,salt,
				gender,phone, email,
				is_delete, created_user, created_time,
				modified_user, modified_time
			) VALUES (
				#{username}, #{password},#{salt},
				#{gender},#{phone}, #{email},
				#{isDelete},#{createdUser}, #{createdTime},
				#{modifiedUser}, #{modifiedTime}
			)
	</insert>

	<!-- 更新密码 -->
	<!-- Integer updatePassword(
			@Param("uid") Integer uid,
			@Param("password") String password,
			@Param("modifiedUser") String modifiedUser,
			@Param("modifiedTime") Date modifiedTime) -->
	<update id="updatePassword">
		UPDATE
			user
		SET
			password=#{password},
			modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		WHERE
			uid=#{uid}
	</update>

	<!--Integer resetPasswordByEmail(Integer code,String email,String password);-->
	<update id="resetPasswordByEmail">
		UPDATE
			user
		SET
			password=#{password}
		WHERE
			email=#{email}
		AND
			code=#{code}
	</update>

	<!-- 更新个人资料 -->
	<!-- Integer updateInfo(User user) -->
	<update id="updateInfo">
		UPDATE
			user
		SET
			gender=#{gender},
			phone=#{phone},
			email=#{email},
			modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		WHERE
			uid=#{uid}
	</update>

	<!--Integer updateCode(Integer code,String email);-->
	<update id="updateCode">
		UPDATE
			user
		SET
			code=#{code}
		WHERE
			email=#{email}
	</update>

    <!-- 根据用户名查询用户数据 -->
    <!-- User findByUsername(String username) -->
    <select id="findByUsername" resultMap="UserEntityMap">
			SELECT
				*
			FROM
				user
			WHERE
				username=#{username}
	</select>

	<!-- 根据用户id查询用户数据 -->
	<!-- User findByUid(Integer uid) -->
	<select id="findByUid" resultMap="UserEntityMap">
		SELECT
			*
		FROM
			user
		WHERE
			uid=#{uid}
	</select>

	<!--User findByEmail(String email);-->
	<select id="findByEmail" resultMap="UserEntityMap">
		SELECT
			*
		FROM
			user
		WHERE
			email=#{email}
	</select>

	<!--List<User> findUsers();-->
	<select id="findUsers" resultMap="UserEntityMap">
		SELECT
			*
		FROM
			user
	</select>
</mapper>










